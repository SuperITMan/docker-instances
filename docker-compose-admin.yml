version: '3.4'
services: 
######################################
#            Home page               #
######################################
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    env_file: .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.heimdall.rule=Host(`${HEIMDALL_HOST}`)
      - traefik.http.routers.heimdall.tls.certresolver=lets-encrypt                 
      - traefik.http.routers.heimdall.entrypoints=web-secure
      - traefik.http.routers.heimdall.middlewares=basic-auth@file
      - traefik.http.services.heimdall.loadbalancer.server.port=80
      # This three lines will ask traefik to make this service as default route
      # if the hostname is not recognized/unknown by traefik
      - traefik.http.routers.heimdall.tls.domains[0].sans=*.${MAIN_DOMAIN} 
      - traefik.http.routers.heimdall.rule=hostregexp(`{host:.+}`) 
      - traefik.http.routers.heimdall.priority=1  
    volumes:
      - ${HEIMDALL_CONFIG}:/config
    networks:
      - proxy
    ports:
      - 8083:80
      - 4433:443
    restart: always
######################################
#            Portainer               #
######################################   
  portainer:
    container_name: portainer        
    env_file: .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOST}`)
      - traefik.http.routers.portainer.tls.certresolver=lets-encrypt
      - traefik.http.routers.portainer.entrypoints=web-secure
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - data:/data
    networks:
      - proxy
    expose:
      - "9000"
    restart: always
######################################
#              NetData               #
######################################    
  netdata:
    container_name: netdata
    env_file: .env
    image: netdata/netdata
    hostname: ${NETDATA_HOST} # set to fqdn of host
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.netdata.rule=Host(`${NETDATA_HOST}`)
      - traefik.http.routers.netdata.tls.certresolver=lets-encrypt
      - traefik.http.routers.netdata.entrypoints=web-secure
      - traefik.http.routers.netdata.middlewares=basic-auth@file
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks: 
      - proxy
    environment:
      - DOCKER_USR=root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/os-release:/host/etc/os-release:ro
    restart: always
######################################
#               DNS                  #
######################################
  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    labels:
      - traefik.enable=false
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DDCLIENT_CONFIG}:/config
    restart: unless-stopped
    
    
######################################
#             Volumes                #
######################################
volumes:
  data:
######################################
#            Networks                #
######################################
networks:
  proxy:
    external:
      name: proxy   
  bridge:
    external:
      name: bridge   